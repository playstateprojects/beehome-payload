/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'push-notifications': PushNotification;
    'space-types': SpaceType;
    commitments: Commitment;
    articles: Article;
    'in-app-notifications': InAppNotification;
    'action-cards': ActionCard;
    checklist: Checklist;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'push-notifications': PushNotificationsSelect<false> | PushNotificationsSelect<true>;
    'space-types': SpaceTypesSelect<false> | SpaceTypesSelect<true>;
    commitments: CommitmentsSelect<false> | CommitmentsSelect<true>;
    articles: ArticlesSelect<false> | ArticlesSelect<true>;
    'in-app-notifications': InAppNotificationsSelect<false> | InAppNotificationsSelect<true>;
    'action-cards': ActionCardsSelect<false> | ActionCardsSelect<true>;
    checklist: ChecklistSelect<false> | ChecklistSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: 'en' | 'fr' | 'de';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "push-notifications".
 */
export interface PushNotification {
  id: number;
  title: string;
  message: string;
  image?: (number | null) | Media;
  publishDate?: string | null;
  schedule?: number | null;
  limmit?: number | null;
  key: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "space-types".
 */
export interface SpaceType {
  id: number;
  /**
   * Autogenerated UUID; do not edit. Used to match D1 table rows.
   */
  stableId?: string | null;
  /**
   * Machine key (e.g. balcony, garden) â€” must match D1.space_types.key
   */
  key: string;
  /**
   * Human-readable name (localized).
   */
  label: string;
  description?: string | null;
  sort?: number | null;
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "commitments".
 */
export interface Commitment {
  id: number;
  /**
   * Autogenerated UUID; do not edit. Used to match D1 table rows.
   */
  stableId?: string | null;
  /**
   * Machine key (e.g. no_pesticides, plant_native_flowers)
   */
  key: string;
  /**
   * Human-readable label (localized).
   */
  title: string;
  description?: string | null;
  /**
   * Single emoji character (optional)
   */
  emoji?: string | null;
  /**
   * e.g. planting, maintenance, water, nesting
   */
  category?: string | null;
  /**
   * Rough impact score 0-100
   */
  impact_score?: number | null;
  /**
   * Month when this commitment becomes relevant (1-12)
   */
  seasonal_start_month?: number | null;
  /**
   * Month when this commitment ends (1-12)
   */
  seasonal_end_month?: number | null;
  /**
   * NULL for one-off, or number of days between repetitions (e.g. 30)
   */
  repeat_interval_days?: number | null;
  /**
   * Space types this commitment applies to
   */
  space_types: (number | SpaceType)[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
  id: number;
  title: string;
  /**
   * Auto-filled from Title if left blank.
   */
  slug?: string | null;
  heroImage?: (number | null) | Media;
  intro?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  body?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  publishDate?: string | null;
  author?: string | null;
  reviewStatus?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "in-app-notifications".
 */
export interface InAppNotification {
  id: number;
  title: string;
  message: string;
  image?: (number | null) | Media;
  actionButtonText?: string | null;
  /**
   * Will not be displayed before this date
   */
  publishDate?: string | null;
  /**
   * Will not be displayed after this date
   */
  endDate?: string | null;
  schedule?: number | null;
  limmit?: number | null;
  key: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "action-cards".
 */
export interface ActionCard {
  id: number;
  title: string;
  slug: string;
  /**
   * Appears top left.
   */
  topic: string;
  /**
   * Appears top right.
   */
  tag: string;
  /**
   * A link to follow when the action cards is clicked.
   */
  link?: string | null;
  image?: (number | null) | Media;
  body?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  publishDate?: string | null;
  endDate?: string | null;
  /**
   * Show even if already viewed
   */
  multipleViews?: boolean | null;
  /**
   * Display this Action Card to all users. No rules will be checked before display
   */
  displayToAllUsers?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "checklist".
 */
export interface Checklist {
  id: number;
  title: string;
  /**
   * this will be autogenerated based on the title.
   */
  slug: string;
  description?: string | null;
  /**
   * A question card with a list of options.
   */
  optionGroups?:
    | {
        title?: string | null;
        description?: string | null;
        options?:
          | {
              type: 'checkbox' | 'text' | 'number';
              description?: string | null;
              uuid: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * End screens that might be displayed. Add multiple if they react dynamically to the users options. include variables in curly braces for example "Hello {NAME}".
   */
  endScreens?:
    | {
        image?: (number | null) | Media;
        title: string;
        actionButton?: string | null;
        body?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        uuid: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'push-notifications';
        value: number | PushNotification;
      } | null)
    | ({
        relationTo: 'space-types';
        value: number | SpaceType;
      } | null)
    | ({
        relationTo: 'commitments';
        value: number | Commitment;
      } | null)
    | ({
        relationTo: 'articles';
        value: number | Article;
      } | null)
    | ({
        relationTo: 'in-app-notifications';
        value: number | InAppNotification;
      } | null)
    | ({
        relationTo: 'action-cards';
        value: number | ActionCard;
      } | null)
    | ({
        relationTo: 'checklist';
        value: number | Checklist;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "push-notifications_select".
 */
export interface PushNotificationsSelect<T extends boolean = true> {
  title?: T;
  message?: T;
  image?: T;
  publishDate?: T;
  schedule?: T;
  limmit?: T;
  key?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "space-types_select".
 */
export interface SpaceTypesSelect<T extends boolean = true> {
  stableId?: T;
  key?: T;
  label?: T;
  description?: T;
  sort?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "commitments_select".
 */
export interface CommitmentsSelect<T extends boolean = true> {
  stableId?: T;
  key?: T;
  title?: T;
  description?: T;
  emoji?: T;
  category?: T;
  impact_score?: T;
  seasonal_start_month?: T;
  seasonal_end_month?: T;
  repeat_interval_days?: T;
  space_types?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  heroImage?: T;
  intro?: T;
  body?: T;
  publishDate?: T;
  author?: T;
  reviewStatus?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "in-app-notifications_select".
 */
export interface InAppNotificationsSelect<T extends boolean = true> {
  title?: T;
  message?: T;
  image?: T;
  actionButtonText?: T;
  publishDate?: T;
  endDate?: T;
  schedule?: T;
  limmit?: T;
  key?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "action-cards_select".
 */
export interface ActionCardsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  topic?: T;
  tag?: T;
  link?: T;
  image?: T;
  body?: T;
  publishDate?: T;
  endDate?: T;
  multipleViews?: T;
  displayToAllUsers?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "checklist_select".
 */
export interface ChecklistSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  optionGroups?:
    | T
    | {
        title?: T;
        description?: T;
        options?:
          | T
          | {
              type?: T;
              description?: T;
              uuid?: T;
              id?: T;
            };
        id?: T;
      };
  endScreens?:
    | T
    | {
        image?: T;
        title?: T;
        actionButton?: T;
        body?: T;
        uuid?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}